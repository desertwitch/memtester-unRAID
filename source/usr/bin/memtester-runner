#!/bin/bash
#
# Copyright Derek Macias (parts of code from NUT package)
# Copyright macester (parts of code from NUT package)
# Copyright gfjardim (parts of code from NUT package)
# Copyright SimonF (parts of code from NUT package)
# Copyright Lime Technology (any and all other parts of Unraid)
#
# Copyright desertwitch (as author and maintainer of this file)
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License 2
# as published by the Free Software Foundation.
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
NOTIFY_BIN="/usr/local/emhttp/plugins/dynamix/scripts/notify"
HOST="$(echo "$HOSTNAME" | awk '{print toupper($0)}')"
EVENT="Live Memory Tester"
SUBJECT="[${HOST}] Memory Testing:"

params=("$@")

rm -f /var/lib/memtester/log
rm -f /var/lib/memtester/errlog
rm -f /var/lib/memtester/laststart
rm -f /var/lib/memtester/lastfinish

# shellcheck disable=SC2317
signal_exit_memtest() {
    echo "memory testing was interrupted (code: SIGTERM)" | logger -t "memtester-runner"
    echo "" | tee -a /var/lib/memtester/log /var/lib/memtester/errlog
    echo "=============================================================================================" | tee -a /var/lib/memtester/log /var/lib/memtester/errlog
    ENDDATE="$(date +"%d.%m.%Y %H:%M:%S %Z")"
    echo "${ENDDATE}" > /var/lib/memtester/lastfinish
    printf "[%s] The operation was interrupted and has not finished.\n[%s] Code: SIGTERM - Program Interrupt." "${ENDDATE}" "${ENDDATE}" | tee -a /var/lib/memtester/log /var/lib/memtester/errlog
    [ "${params[1]}" == "1" ] && $NOTIFY_BIN -e "${EVENT}" -s "Alert ${SUBJECT} Interrupted" -d "The operation was interrupted. (Code: SIGTERM)" -i "alert"
    exit 1
}

if ! mountpoint -q /var/lib/memtester; then 
    rm -rf /var/lib/memtester
    mkdir -p /var/lib/memtester
    if ! mount -t tmpfs -o size=30% tmpfs /var/lib/memtester; then
        echo "!!! Live Memory Tester could not create a ramdisk for its operational output." | tee -a /var/lib/memtester/log /var/lib/memtester/errlog
        echo "!!! This is to ensure that excessively large logfiles cannot choke the rest of the system." | tee -a /var/lib/memtester/log /var/lib/memtester/errlog
        echo "!!! You can resolve this by reinstalling the plugin, if not please visit the support topic." | tee -a /var/lib/memtester/log /var/lib/memtester/errlog
        echo "" | tee -a /var/lib/memtester/log /var/lib/memtester/errlog
    fi
fi

chown root:root /var/lib/memtester
chmod 755 /var/lib/memtester

STARTDATE="$(date +"%d.%m.%Y %H:%M:%S %Z")"
echo "$STARTDATE" > /var/lib/memtester/laststart

trap signal_exit_memtest SIGTERM SIGINT 

echo "memory testing started with parameters: ${params[*]:2}" | logger -t "memtester-runner"

echo "[${STARTDATE}] /usr/bin/memtester ${params[*]:2}" | tee -a /var/lib/memtester/log /var/lib/memtester/errlog
echo "=============================================================================================" | tee -a /var/lib/memtester/log /var/lib/memtester/errlog
echo "" | tee -a /var/lib/memtester/log /var/lib/memtester/errlog

if [ "${params[0]}" == "1" ]; then
    echo "The detailed error output was enabled, please watch this panel for any occurring errors." | tee -a /var/lib/memtester/errlog
    echo "" | tee -a /var/lib/memtester/errlog
    /usr/bin/memtester "${params[@]:2}" 1>>/var/lib/memtester/log 2>>/var/lib/memtester/errlog
    CMDRET=${PIPESTATUS[0]}
else
    echo "The detailed error output was disabled, please refer to the left panel for the test summaries." | tee -a /var/lib/memtester/errlog
    echo "" | tee -a /var/lib/memtester/errlog
    /usr/bin/memtester "${params[@]:2}" 1>>/var/lib/memtester/log 2>/dev/null
    CMDRET=${PIPESTATUS[0]}
fi

echo "" | tee -a /var/lib/memtester/log /var/lib/memtester/errlog
echo "=============================================================================================" | tee -a /var/lib/memtester/log /var/lib/memtester/errlog

ENDDATE="$(date +"%d.%m.%Y %H:%M:%S %Z")"
echo "$ENDDATE" > /var/lib/memtester/lastfinish

if [ "$CMDRET" -eq 0 ]; then
    echo "memory testing has finished without errors (code: ${CMDRET})" | logger -t "memtester-runner"
    printf "[%s] The operation has finished without errors.\n[%s] Code: %s - OK." "${ENDDATE}" "${ENDDATE}" "${CMDRET}" | tee -a /var/lib/memtester/log /var/lib/memtester/errlog
    [ "${params[1]}" == "1" ] && $NOTIFY_BIN -e "${EVENT}" -s "Notice ${SUBJECT} Success" -d "The operation has finished without errors. (Code: ${CMDRET})" -i "normal"
elif [ "$CMDRET" -eq 1 ]; then
    echo "memory testing has finished with errors (code: ${CMDRET})" | logger -t "memtester-runner"
    printf "[%s] The operation has finished with errors.\n[%s] Code: %s - Program Invocation or Memory Allocation Error." "${ENDDATE}" "${ENDDATE}" "${CMDRET}" | tee -a /var/lib/memtester/log /var/lib/memtester/errlog
    [ "${params[1]}" == "1" ] && $NOTIFY_BIN -e "${EVENT}" -s "Alert ${SUBJECT} Failure" -d "Program Invocation or Memory Allocation Error (Code: ${CMDRET})" -i "alert"
elif [ "$CMDRET" -eq 2 ]; then
    echo "memory testing has finished with errors (code: ${CMDRET})" | logger -t "memtester-runner"
    printf "[%s] The operation has finished with errors.\n[%s] Code: %s - Error during Stuck Address Test." "${ENDDATE}" "${ENDDATE}" "${CMDRET}" | tee -a /var/lib/memtester/log /var/lib/memtester/errlog
    [ "${params[1]}" == "1" ] && $NOTIFY_BIN -e "${EVENT}" -s "Alert ${SUBJECT} Failure" -d "Error during Stuck Address Test (Code: ${CMDRET})" -i "alert"
elif [ "$CMDRET" -eq 4 ]; then
    echo "memory testing has finished with errors (code: ${CMDRET})" | logger -t "memtester-runner"
    printf "[%s] The operation has finished with errors.\n[%s] Code: %s - Error during Test(s)." "${ENDDATE}" "${ENDDATE}" "${CMDRET}" | tee -a /var/lib/memtester/log /var/lib/memtester/errlog
    [ "${params[1]}" == "1" ] && $NOTIFY_BIN -e "${EVENT}" -s "Alert ${SUBJECT} Failure" -d "Error during Test(s) (Code: ${CMDRET})" -i "alert"
elif [ "$CMDRET" -eq 6 ]; then
    echo "memory testing has finished with errors (code: ${CMDRET})" | logger -t "memtester-runner"
    printf "[%s] The operation has finished with errors.\n[%s] Code: %s - Error during Stuck Address Test + Other Test(s)." "${ENDDATE}" "${ENDDATE}" "${CMDRET}" | tee -a /var/lib/memtester/log /var/lib/memtester/errlog
    [ "${params[1]}" == "1" ] && $NOTIFY_BIN -e "${EVENT}" -s "Alert ${SUBJECT} Failure" -d "Error during Stuck Address Test + Other Test(s) (Code: ${CMDRET})" -i "alert"
else
    echo "memory testing has finished with errors (code: ${CMDRET})" | logger -t "memtester-runner"
    printf "[%s] The operation has finished with errors.\n[%s] Code: %s - Check Operation Output and/or SYSLOG." "${ENDDATE}" "${ENDDATE}" "${CMDRET}" | tee -a /var/lib/memtester/log /var/lib/memtester/errlog
    [ "${params[1]}" == "1" ] && $NOTIFY_BIN -e "${EVENT}" -s "Alert ${SUBJECT} Failure" -d "Check Operation Output and/or SYSLOG (Code: ${CMDRET})" -i "alert"
fi

exit 0
