Menu="Utilities"
Type="xmenu"
Title="Memory Tester"
Icon="microchip"
Tag="microchip"
Markdown="false"
---
<?
$memlaststart = trim(file_exists("/var/log/memtester/laststart") ? htmlspecialchars(file_get_contents("/var/log/memtester/laststart")) : "-");
$memlastfinish = trim(file_exists("/var/log/memtester/lastfinish") ? htmlspecialchars(file_get_contents("/var/log/memtester/lastfinish")) : "-");
?>

<style type="text/css">
.memlog {
    height: 450px;
    max-height: 450px;
    overflow: auto;
    word-break: normal !important;
    word-wrap: normal !important;
    white-space: pre !important;
}
</style>

<table class="tablesorter shift" autofocus>
    <thead>
        <tr>
            <th><i id="memstatusicon" class="fa fa-cog fa-spin" style="display:none;"></i> <strong>Operation Screen</strong></th>
            <th style="text-transform: none;"><strong>Started:</strong> <em><?=$memlaststart?></em></th>
            <th style="text-transform: none;"><strong>Finished:</strong> <em><?=$memlastfinish?></em><span style="float:right;"><strong>Refresh:</strong> <i id="memlogcontrol" class="fa fa-refresh fa-spin"></i></span></th>
        </tr>
    </thead>
</table>

<span id="memlogviewer"><div style="text-align:center;"><i class="fa fa-spinner fa-spin"></i> <em>Please wait, retrieving information...</em></div></span>

<form markdown="0" id="memcommands" name="memcommands" method="POST" action="/update.php" target="progressFrame">
    <input type="hidden" id="memcommand" name="#command" value="/usr/local/emhttp/plugins/dwmemtester/scripts/start">

    <input type="text" class="narrow memrun" id="memsize" name="#arg[1]" placeholder="<memory>[B|K|M|G]" value="">
    <input type="text" class="narrow memrun" id="memloops" name="#arg[2]" placeholder="loops" value="">
    <input type="button" class="memrun" id="memstart" value="Start Operation">

    <span style="float:right;">
        <input type="button" class="memnotrun" id="memstop" value="Stop Operation">
        <input type="button" class="memnotrun" id="memkill" value="Kill Operation">
    </span><br>

</form>

<script type="text/javascript">
function getMemLogs() {
    $.get('/plugins/dwmemtester/include/dwmemtester_log.php', function(data) {
        if (data) { 
            $('#memlogviewer').html(data); 
	        var pre = $(".memlog");
	        pre.scrollTop(pre.prop("scrollHeight"));
	    }
    });
    clearTimeout(timers.getMemLogs);
    timers.getMemLogs = setTimeout(getMemLogs, 1000);
}
function getMemStatus() {
    $.get('/plugins/dwmemtester/include/dwmemtester_status.php', function(data) {
        if (data) {
            if(data === "RUNNING:YES") {
                $('#memstatusicon').show();
                $('.memrun').prop('disabled', true);
                $('.memnotrun').prop('disabled', false);
            } else if (data === "RUNNING:NO") {
                if($('#memstatusicon').is(":visible")) {
                    location = '/Settings/dwmemtester';
                }
                $('#memstatusicon').hide();
                $('.memrun').prop('disabled', false);
                $('.memnotrun').prop('disabled', true);
                $('#memlogcontrol').attr("class", "fa fa-refresh");
                clearTimeout(timers.getMemLogs);
            }
	    }
    });
    clearTimeout(timers.getMemStatus);
    timers.getMemStatus = setTimeout(getMemStatus, 3000);
}
function toggleMemLogs() {
    if($('#memlogcontrol').attr("class") == "fa fa-refresh fa-spin") {
        $('#memlogcontrol').attr("class", "fa fa-refresh");
        clearTimeout(timers.getMemLogs);
    } else {
        $('#memlogcontrol').attr("class", "fa fa-refresh fa-spin");
        getMemLogs();
    }
}
$(function()
{
    $('#memstart').click(function(){
        $('#memcommand').val('/usr/local/emhttp/plugins/dwmemtester/scripts/start');
        $('#memcommands').submit();
    });
    $('#memstop').click(function(){
        $('#memcommand').val('/usr/local/emhttp/plugins/dwmemtester/scripts/stop');
        $('#memcommands').submit();
    });
    $('#memkill').click(function(){
        $('#memcommand').val('/usr/local/emhttp/plugins/dwmemtester/scripts/kill');
        $('#memcommands').submit();
    });
    $('#memlogcontrol').click(toggleMemLogs);
    getMemStatus()
    getMemLogs();
});
</script>
